name: build/release

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-18.04]

    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: yarn install
        run: |
          yarn install
      - name: Publish
        if: matrix.os != 'windows-latest'
        run: |
          yarn build:linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish win
        if: matrix.os == 'windows-latest'
        run: |
          yarn build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup artifacts
        if: matrix.os != 'windows-latest'
        run: |
          mkdir artifacts
          mv "dist/(*.exe,*.deb,*.AppImage,*.dmg)" artifacts || true
      - name: Cleanup artifacts Win
        if: matrix.os == 'windows-latest'
        run: |
          mkdir artifacts
          mv dist/*.exe artifacts
#       - name: Cleanup artifacts
#         run: |
#           npx rimraf "dist/!(*.exe|*.deb|*.AppImage|*.dmg)"
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}
          path: artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "artifacts/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
